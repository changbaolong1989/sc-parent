server:
  port: 8888
  tomcat:
    uri-encoding: UTF-8

spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/sc-server-provider?useSSL=false&allowMultiQueries=true&autoReconnect=true&characterEncoding=UTF-8&useTimezone=false
    username: root
    password: admin
    druid:
      # 初始化连接数
      initial-size: 3
      # 最小连接数
      min-idle: 3
      # 最大连接数
      max-active: 30
      # 最大等待时间 单位：毫秒
      max-wait: 9000
      # 配置间隔多久进行一次对需要关闭的空闲连接的检测，单位：毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位：毫秒
      min-evictable-idle-time-millis: 300000
      # 检测连接有效性的SQL文
      validation-query: SELECT 1
      # 建议配置为true，不影响性能，并且保证安全性。
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，
      # 执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效，
      # 做了这个配置会降低性能。
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，
      # 做了这个配置会降低性能
      test-on-return: false
      # 是否缓存preparedStatement，也就是PSCache。
      # PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: true
      # 要启用PSCache，必须配置大于0，
      # 当大于0时，poolPreparedStatements自动触发修改为true。
      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，
      # 可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: 30
  application:
    name: sc-server-provider
mybatis:
  mapper-locations: classpath*:mapper/**/*.xml
  type-aliases-package: com.cbl.spring.cloud.entity
logging:
  level:
    root: INFO
    mysql: INFO
eureka:
  instance:
    prefer-ip-address: true #将自己的IP注册到eureka server
    metadata-map:
      my-metadata: 自定义元数据   #自定义元数据  访问http://localhost:8888/user-instance可以看到
  client:
    service-url:
      # 注册到eureka集群
      # defaultZone: http://eureka-server-1:8761/eureka/,http://eureka-server-2:8762/eureka/
      # 注册到带有用户认证的eureka
      defaultZone: http://admin:admin@eureka-server-1:8761/eureka/,http://admin:admin@eureka-server-2:8762/eureka/
